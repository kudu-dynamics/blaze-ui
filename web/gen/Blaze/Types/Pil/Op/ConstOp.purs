-- File auto generated by purescript-bridge! --
module Blaze.Types.Pil.Op.ConstOp where

import Data.Generic.Rep (class Generic)
import Data.Generic.Rep.Show (genericShow)
import Data.Int64 (Int64)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Foreign.Class (class Decode, class Encode)
import Foreign.Generic (aesonSumEncoding, defaultOptions, genericDecode, genericEncode)
import Foreign.Generic.EnumEncoding (defaultGenericEnumOptions, genericDecodeEnum, genericEncodeEnum)

import Prelude

newtype ConstOp a
  = ConstOp
      { constant :: Int64
      }


instance showConstOp :: Show (ConstOp a) where
  show x = genericShow x
derive instance eqConstOp :: Eq (ConstOp a)
derive instance ordConstOp :: Ord (ConstOp a)
instance encodeConstOp :: Encode (ConstOp a) where
  encode value = genericEncode (defaultOptions { unwrapSingleConstructors = true
                                               , unwrapSingleArguments = true
                                               }) value
instance decodeConstOp :: Decode (ConstOp a) where
  decode value = genericDecode (defaultOptions { unwrapSingleConstructors = true
                                               , unwrapSingleArguments = true
                                               }) value
derive instance genericConstOp :: Generic (ConstOp a) _
derive instance newtypeConstOp :: Newtype (ConstOp a) _
--------------------------------------------------------------------------------
_ConstOp :: forall a. Iso' (ConstOp a) { constant :: Int64 }
_ConstOp = _Newtype
--------------------------------------------------------------------------------
