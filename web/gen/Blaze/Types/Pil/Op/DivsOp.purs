-- File auto generated by purescript-bridge! --
module Blaze.Types.Pil.Op.DivsOp where

import Data.Generic.Rep (class Generic)
import Data.Generic.Rep.Show (genericShow)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Foreign.Class (class Decode, class Encode)
import Foreign.Generic (aesonSumEncoding, defaultOptions, genericDecode, genericEncode)
import Foreign.Generic.EnumEncoding (defaultGenericEnumOptions, genericDecodeEnum, genericEncodeEnum)

import Prelude

newtype DivsOp a
  = DivsOp
      { left :: a
      , right :: a
      }


instance showDivsOp :: (Show a) => Show (DivsOp a) where
  show x = genericShow x
derive instance eqDivsOp :: (Eq a) => Eq (DivsOp a)
derive instance ordDivsOp :: (Ord a) => Ord (DivsOp a)
instance encodeDivsOp :: (Encode a) => Encode (DivsOp a) where
  encode value = genericEncode (defaultOptions { unwrapSingleConstructors = true
                                               , unwrapSingleArguments = true
                                               }) value
instance decodeDivsOp :: (Decode a) => Decode (DivsOp a) where
  decode value = genericDecode (defaultOptions { unwrapSingleConstructors = true
                                               , unwrapSingleArguments = true
                                               }) value
derive instance genericDivsOp :: Generic (DivsOp a) _
derive instance newtypeDivsOp :: Newtype (DivsOp a) _
--------------------------------------------------------------------------------
_DivsOp :: forall a. Iso' (DivsOp a) { left :: a, right :: a }
_DivsOp = _Newtype
--------------------------------------------------------------------------------
